# =============================================
# Job A: Upload to UAT Nexus (with SHA1)
# File: playbook_jobA_upload_uat.yml
# =============================================
- hosts: "{{ COMP }}"
  gather_facts: true
  vars_files:
    - "../vars/myvars"
  tasks:

    - name: Check Connectivity
      win_ping:
      register: ping_status
      when: OS == "winrm"

    - name: Check Connectivity
      ping:
      register: ping_status
      when: OS == "ssh"

    - name: Print ping status (Linux)
      debug:
        msg: "{{ ping_status.ping }}"
      when: OS == "ssh"

    - name: Print ping status (Windows)
      debug:
        msg: "{{ ping_status }}"
      when: OS == "winrm"

    - name: Print variable values
      debug:
        msg:
          - "server dest path is: {{ server_download_path }}"
          - "repo dir is: {{ repo_dir }}"
          - "source path is: {{ upload_source_path }}"
          - "linux upload path is: {{ upload_source_path_lin }}"
          - "nexus_pr path is: {{ nexus_repo_pr }}"
    
    - name: Sanity check (.zip required)
      fail:
        msg: "Package '{{ file_name }}' must end with .zip"
      when: file_name is not regex('.*\\.zip$')
##### Upload Linux Package to Nexus UAT folder #####
    - name: Generate SHA1 for package (Linux)
      shell: sha1sum {{ upload_source_path_lin }}/{{ file_name }} | awk '{print $1}'
      register: sha1_val
      when:
        - task == "upload"
        - OS == "ssh"
        - ENVNAME == "UAT"

    - name: Write .sha1 sidecar (Linux)
      copy:
        dest: "{{ upload_source_path_lin }}/{{ file_name }}.sha1"
        content: "{{ sha1_val.stdout }}"
      when: 
        - task == "upload"
        - OS == "ssh"
        - ENVNAME == "UAT"

    - name: Upload package to UAT Nexus (Linux)
      shell: >
        curl -v -k -u {{ nexus_username }}:{{ nexus_password }}
        --upload-file {{ upload_source_path_lin }}/{{ file_name }}
        {{ nexus_uat_path }}/{{ file_name }}
      register: upload_pkg
      when: 
        - task == "upload"
        - OS == "ssh"
        - ENVNAME == "UAT"

    - name: Upload .sha1 to UAT Nexus (Linux)
      shell: >
        curl -v -k -u {{ nexus_username }}:{{ nexus_password }}
        --upload-file {{ upload_source_path_lin }}/{{ file_name }}.sha1
        {{ nexus_uat_path }}/{{ file_name }}.sha1
      register: upload_sha
      when: 
        - task == "upload"
        - OS == "ssh"
        - ENVNAME == "UAT"

    - name: Summary (UAT upload)
      debug:
        msg:
          - "Uploaded to UAT: {{ file_name }}"
          - "SHA1: {{ sha1_val.stdout }}"
          - "pkg rc: {{ upload_pkg.rc | default('n/a') }}  sha rc: {{ upload_sha.rc | default('n/a') }}"
      when: 
        - task == "upload"
        - OS == "ssh"
        - ENVNAME == "UAT"

##### Upload Windows Package to the Nexus UAt folder #####

    - name: Generate SHA1 for package (Windows)
      win_shell: |
        $hash = (Get-FileHash -Algorithm SHA1 "{{ upload_source_path }}\{{ file_name }}").Hash
        $hash
      register: sha1_val
      when:
        - task == "upload"
        - OS == "winrm"
        - ENVNAME == "UAT"

    - name: Ensure upload directory exists (Windows)
      win_file:
        path: "{{ upload_source_path }}"
        state: directory
      when:
        - task == "upload"
        - OS == "winrm"
        - ENVNAME == "UAT"

    - name: Write .sha1 sidecar (Windows, via PowerShell)
      win_shell: |
        $dest = "{{ upload_source_path }}\{{ file_name }}.sha1"
        $val  = "{{ sha1_val.stdout | trim }}"
        Set-Content -LiteralPath $dest -Value $val -NoNewline -Encoding ascii
      when:
        - task == "upload"
        - OS == "winrm"
        - ENVNAME == "UAT"

    - name: Upload package to UAT Nexus (Windows)
      win_shell: >
        curl.exe -v -k -u {{ nexus_username }}:{{ nexus_password }}
        --upload-file "{{ upload_source_path }}\{{ file_name }}"
        "{{ nexus_uat_path }}/{{ file_name }}"
      register: upload_pkg
      when:
        - task == "upload"
        - OS == "winrm"
        - ENVNAME == "UAT"

    - name: Upload .sha1 to UAT Nexus (Windows)
      win_shell: >
        curl.exe -v -k -u {{ nexus_username }}:{{ nexus_password }}
        --upload-file "{{ upload_source_path }}\{{ file_name }}.sha1"
        "{{ nexus_uat_path }}/{{ file_name }}.sha1"
      register: upload_sha
      when:
        - task == "upload"
        - OS == "winrm"
        - ENVNAME == "UAT"

    - name: Summary (UAT upload)
      debug:
        msg:
          - "Uploaded to UAT: {{ file_name }}"
          - "SHA1: {{ sha1_val.stdout | trim }}"
      when:
        - task == "upload"
        - OS == "winrm"
        - ENVNAME == "UAT"

##### Download Linux Package to Linux UAT VM #####

    - name: Ensure destination directory exists (Linux)
      file:
        path: "{{ server_download_path_lin }}"
        state: directory
      when:  
        - task == "upload"
        - OS == "ssh"
        - ENVNAME == "UAT"

    - name: Download package from UAT Nexus (Linux)
      get_url:
        url: "{{ nexus_uat_path }}/{{ file_name }}"
        dest: "{{ server_download_path_lin }}/{{ file_name }}"
        url_username: "{{ nexus_username }}"
        url_password: "{{ nexus_password }}"
        validate_certs: false
      when: 
        - task == "download"
        - OS == "ssh"
        - ENVNAME == "UAT"

    - name: Download .sha1 from UAT Nexus (Linux)
      get_url:
        url: "{{ nexus_uat_path }}/{{ file_name }}.sha1"
        dest: "{{ server_download_path_lin }}/{{ file_name }}.sha1"
        url_username: "{{ nexus_username }}"
        url_password: "{{ nexus_password }}"
        validate_certs: false
      when: 
        - task == "download"
        - OS == "ssh"
        - ENVNAME == "UAT"

    - name: Read SHA1 from .sha1 (Linux)
      command: cat {{ server_download_path_lin }}/{{ file_name }}.sha1
      register: nexus_sha1
      when: 
        - task == "download"
        - OS == "ssh"
        - ENVNAME == "UAT"

    - name: Calculate SHA1 of downloaded file (Linux)
      shell: sha1sum {{ server_download_path_lin }}/{{ file_name }} | awk '{print $1}'
      register: local_sha1
      when: 
        - task == "download"
        - OS == "ssh"
        - ENVNAME == "UAT"

    - name: Fail if Nexus SHA1 != user-supplied checksum (Linux)
      fail:
        msg: "User checksum mismatch vs Nexus: user={{ checksum_val }}  nexus={{ nexus_sha1.stdout }}"
      when:
        - OS == "ssh"
        - task == "download"
        - ENVNAME == "UAT"
        - checksum_val is defined
        - checksum_val | length > 0
        - nexus_sha1.stdout != checksum_val

    - name: SHA1 summary (Linux)
      debug:
        msg:
          - "SHA1 summary for {{ file_name }}:"
          - "  - From UAT Nexus (.sha1): {{ nexus_sha1.stdout }}"
          - "  - User-supplied (input)  : {{ checksum_val | default('N/A') }}"
      when: 
        - task == "download"
        - OS == "ssh"
        - ENVNAME == "UAT"

##### Download Windows Package to Windows UAT VM #####

    - name: Ensure destination directory exists (Windows)
      win_file:
        path: "{{ server_download_path }}"
        state: directory
      when:
        - task == "download"
        - OS == "winrm"
        - ENVNAME == "UAT"

    - name: Download package from UAT Nexus (Windows)
      win_get_url:
        url: "{{ nexus_uat_path }}/{{ file_name }}"
        dest: "{{ server_download_path }}\\{{ file_name }}"
        url_username: "{{ nexus_username }}"
        url_password: "{{ nexus_password }}"
        validate_certs: false
      when:
        - task == "download"
        - OS == "winrm"
        - ENVNAME == "UAT"

    - name: Download .sha1 from UAT Nexus (Windows)
      win_get_url:
        url: "{{ nexus_uat_path }}/{{ file_name }}.sha1"
        dest: "{{ server_download_path }}\\{{ file_name }}.sha1"
        url_username: "{{ nexus_username }}"
        url_password: "{{ nexus_password }}"
        validate_certs: false
      when:
        - task == "download"
        - OS == "winrm"
        - ENVNAME == "UAT"

    - name: Read SHA1 from .sha1 (Windows)
      win_shell: |
        (Get-Content -Raw "{{ server_download_path }}\{{ file_name }}.sha1").Trim() -split '\s+' | Select-Object -First 1
      register: nexus_sha1
      when:
        - task == "download"
        - OS == "winrm"
        - ENVNAME == "UAT"

    - name: Fail if Nexus SHA1 != user-supplied checksum (Windows)
      fail:
        msg: "User checksum mismatch vs Nexus: user={{ checksum_val }}  nexus={{ nexus_sha1.stdout | trim }}"
      when:
        - task == "download"
        - OS == "winrm"
        - ENVNAME == "UAT"
        - checksum_val is defined
        - checksum_val | length > 0
        - (nexus_sha1.stdout | trim) != checksum_val

    - name: SHA1 summary (Windows)
      debug:
        msg:
          - "SHA1 summary for {{ file_name }}:"
          - "  - From UAT Nexus (.sha1): {{ nexus_sha1.stdout | trim }}"
          - "  - User-supplied (input)  : {{ checksum_val | default('N/A') }}"
      when:
        - task == "download"
        - OS == "winrm"
        - ENVNAME == "UAT"

##### Upload the Linux Package to Nexus Prod Folder #####

    - name: Ensure approved file exists (Linux)
      stat:
        path: "{{ server_download_path_lin }}/{{ file_name }}"
      register: approved_pkg
      when: 
        - task == "upload"
        - OS == "ssh"
        - ENVNAME != "UAT"

    - name: Ensure approved checksum exists (Linux)
      stat:
        path: "{{ server_download_path_lin }}/{{ file_name }}.sha1"
      register: approved_sha
      when: 
        - task == "upload"
        - OS == "ssh"
        - ENVNAME != "UAT"

    - name: approved file or checksum missing
      fail:
        msg: "Approved artifact or .sha1 missing under {{ server_download_path_lin }}"
      when:
        - task == "upload"
        - OS == "ssh"
        - ENVNAME != "UAT"
        - (not approved_pkg.stat.exists) or (not approved_sha.stat.exists)

    - name: Read approved .sha1 (Linux)
      command: cat {{ server_download_path_lin }}/{{ file_name }}.sha1
      register: approved_sha1
      when: 
        - task == "upload"
        - OS == "ssh"
        - ENVNAME != "UAT"

    - name: Normalize checksum from .sha1 (first token only)
      set_fact:
        file_sha1: "{{ approved_sha1.stdout | regex_replace('\\s.*','') }}"
      when: 
        - task == "upload"
        - OS == "ssh"
        - ENVNAME != "UAT"

    - name: Fail if file .sha1 != input checksum
      fail:
        msg: "Checksum mismatch! input={{ checksum_val }}  file(.sha1)={{ file_sha1 }}"
      when:
        - task == "upload"
        - OS == "ssh"
        - ENVNAME != "UAT"
        - checksum_val is defined
        - checksum_val | length > 0
        - file_sha1 != checksum_val

    - name: Upload approved package to PROD Nexus (Linux)
      shell: >
        curl -v -k -u {{ nexus_username }}:{{ nexus_password }}
        --upload-file {{ server_download_path_lin }}/{{ file_name }}
        {{ nexus_pr_path }}/{{ file_name }}
      register: pr_pkg
      when: 
        - task == "upload"
        - OS == "ssh"
        - ENVNAME != "UAT"

    - name: Upload approved .sha1 to PROD Nexus (Linux)
      shell: >
        curl -v -k -u {{ nexus_username }}:{{ nexus_password }}
        --upload-file {{ server_download_path_lin }}/{{ file_name }}.sha1
        {{ nexus_pr_path }}/{{ file_name }}.sha1
      register: pr_sha
      when: 
        - task == "upload"
        - OS == "ssh"
        - ENVNAME != "UAT"

    - name: Summary (upload to PROD)
      debug:
        msg:
          - "Uploaded to PROD: {{ file_name }}"
          - "SHA1 (from .sha1): {{ file_sha1 }}"
          - "Input SHA1       : {{ checksum_val | default('N/A') }}"
          - "pkg rc: {{ pr_pkg.rc | default('n/a') }}  sha rc: {{ pr_sha.rc | default('n/a') }}"
      when: 
        - task == "upload"
        - OS == "ssh"
        - ENVNAME != "UAT"

##### Upload the Win Package to Nexus Prod Folder #####

    - name: Ensure approved file exists (Windows)
      win_stat:
        path: "{{ server_download_path }}\\{{ file_name }}"
      register: approved_pkg
      when: 
        - task == "upload"
        - OS == "winrm"
        - ENVNAME != "UAT"

    - name: Ensure approved checksum exists (Windows)
      win_stat:
        path: "{{ server_download_path }}\\{{ file_name }}.sha1"
      register: approved_sha
      when: 
        - task == "upload"
        - OS == "winrm"
        - ENVNAME != "UAT"

    - name: approved file or checksum missing
      fail:
        msg: "Approved artifact or .sha1 missing under {{ server_download_path }}"
      when:
        - task == "upload"
        - OS == "winrm"
        - ENVNAME != "UAT"
        - (not approved_pkg.stat.exists) or (not approved_sha.stat.exists)

    - name: Read approved .sha1 (Windows)
      win_shell: |
        (Get-Content -Raw "{{ server_download_path }}\{{ file_name }}.sha1").Trim() -split '\s+' | Select-Object -First 1
      register: approved_sha1
      when: 
        - task == "upload"
        - OS == "winrm"
        - ENVNAME != "UAT"

    - name: Fail if file .sha1 != input checksum (Windows)
      fail:
        msg: "Checksum mismatch! input={{ checksum_val }}  file(.sha1)={{ approved_sha1.stdout | trim }}"
      when:
        - task == "upload"
        - OS == "winrm"
        - ENVNAME != "UAT"
        - checksum_val is defined
        - checksum_val | length > 0
        - (approved_sha1.stdout | trim) != checksum_val

    - name: Upload approved package to PROD Nexus (Windows)
      win_shell: >
        curl.exe -v -k -u {{ nexus_username }}:{{ nexus_password }}
        --upload-file "{{ server_download_path }}\{{ file_name }}"
        "{{ nexus_pr_path }}/{{ file_name }}"
      register: pr_pkg
      when: 
        - task == "upload"
        - OS == "winrm"
        - ENVNAME != "UAT"

    - name: Upload approved .sha1 to PROD Nexus (Windows)
      win_shell: >
        curl.exe -v -k -u {{ nexus_username }}:{{ nexus_password }}
        --upload-file "{{ server_download_path }}\{{ file_name }}.sha1"
        "{{ nexus_pr_path }}/{{ file_name }}.sha1"
      register: pr_sha
      when: 
        - task == "upload"
        - OS == "winrm"
        - ENVNAME != "UAT"

    - name: Summary (upload to PROD)
      debug:
        msg:
          - "Uploaded to PROD: {{ file_name }}"
          - "SHA1 (from .sha1): {{ approved_sha1.stdout | trim }}"
          - "Input SHA1       : {{ checksum_val | default('N/A') }}"
          - "pkg rc: {{ pr_pkg.rc | default('n/a') }}  sha rc: {{ pr_sha.rc | default('n/a') }}"
      when:
        - task == "upload"
        - OS == "winrm"
        - ENVNAME != "UAT"

##### Download Package to Linux Prod VM #####

    - name: Ensure destination directory exists (Linux)
      file:
        path: "{{ server_download_path_lin }}"
        state: directory
      when: 
        - task == "download"
        - OS == "ssh"
        - ENVNAME != "UAT"

    - name: Download package from PROD Nexus (Linux)
      get_url:
        url: "{{ nexus_pr_path }}/{{ file_name }}"
        dest: "{{ server_download_path_lin }}/{{ file_name }}"
        url_username: "{{ nexus_username }}"
        url_password: "{{ nexus_password }}"
        validate_certs: false
      when: 
        - task == "download"
        - OS == "ssh"
        - ENVNAME != "UAT"

    - name: Download .sha1 from PROD Nexus (Linux)
      get_url:
        url: "{{ nexus_pr_path }}/{{ file_name }}.sha1"
        dest: "{{ server_download_path_lin }}/{{ file_name }}.sha1"
        url_username: "{{ nexus_username }}"
        url_password: "{{ nexus_password }}"
        validate_certs: false
      when: 
        - task == "download"
        - OS == "ssh"
        - ENVNAME != "UAT"

    - name: Read PROD .sha1 (Linux)
      command: cat {{ server_download_path_lin }}/{{ file_name }}.sha1
      register: prod_sha1
      when: 
        - task == "download"
        - OS == "ssh"
        - ENVNAME != "UAT"

    - name: Calculate SHA1 of downloaded file (Linux)
      shell: sha1sum {{ server_download_path_lin }}/{{ file_name }} | awk '{print $1}'
      register: prod_local_sha1
      when: 
        - task == "download"
        - OS == "ssh"
        - ENVNAME != "UAT"

    - name: Fail if Nexus SHA1 != user-supplied checksum (Linux)
      fail:
        msg: "User checksum mismatch vs Nexus: user={{ checksum_val }}  nexus={{ prod_sha1.stdout }}"
      when:
        - task == "download"
        - OS == "ssh"
        - ENVNAME != "UAT"
        - prod_sha1.stdout != checksum_val

    - name: SHA1 summary (PROD)
      debug:
        msg:
          - "PROD verification for {{ file_name }}:"
          - "  - From PROD Nexus (.sha1): {{ prod_sha1.stdout }}"
          - "  - Calculated locally     : {{ prod_local_sha1.stdout }}"
          - "Input SHA1       : {{ checksum_val | default('N/A') }}"
      when:
        - task == "download"
        - OS == "ssh"
        - ENVNAME != "UAT"

##### Download Package to Win Prod VM #####

    - name: Ensure destination directory exists (Windows)
      win_file:
        path: "{{ server_download_path }}"
        state: directory
      when:
        - task == "download"
        - OS == "winrm"
        - ENVNAME != "UAT"

    - name: Download package from PROD Nexus (Windows)
      win_get_url:
        url: "{{ nexus_pr_path }}/{{ file_name }}"
        dest: "{{ server_download_path }}\\{{ file_name }}"
        url_username: "{{ nexus_username }}"
        url_password: "{{ nexus_password }}"
        validate_certs: false
      when:
        - task == "download"
        - OS == "winrm"
        - ENVNAME != "UAT"

    - name: Download .sha1 from PROD Nexus (Windows)
      win_get_url:
        url: "{{ nexus_pr_path }}/{{ file_name }}.sha1"
        dest: "{{ server_download_path }}\\{{ file_name }}.sha1"
        url_username: "{{ nexus_username }}"
        url_password: "{{ nexus_password }}"
        validate_certs: false
      when:
        - task == "download"
        - OS == "winrm"
        - ENVNAME != "UAT"

    - name: Read PROD .sha1 (Windows)
      win_shell: |
        (Get-Content -Raw "{{ server_download_path }}\{{ file_name }}.sha1").Trim() -split '\s+' | Select-Object -First 1
      register: prod_sha1
      when:
        - task == "download"
        - OS == "winrm"
        - ENVNAME != "UAT"

    - name: Calculate SHA1 of downloaded file (Windows)
      win_shell: |
        (Get-FileHash -Algorithm SHA1 "{{ server_download_path }}\{{ file_name }}").Hash
      register: prod_local_sha1
      when:
        - task == "download"
        - OS == "winrm"
        - ENVNAME != "UAT"

    - name: Fail if Nexus SHA1 != user-supplied checksum (Windows)
      fail:
        msg: "User checksum mismatch vs Nexus: user={{ checksum_val }}  nexus={{ prod_sha1.stdout | trim }}"
      when:
        - task == "download"
        - OS == "winrm"
        - ENVNAME != "UAT"
        - prod_sha1.stdout | trim != checksum_val

    - name: Fail if local != nexus (Windows)
      fail:
        msg: "SHA1 mismatch at PROD: local={{ prod_local_sha1.stdout | trim }}  nexus={{ prod_sha1.stdout | trim }}"
      when:
        - task == "download"
        - OS == "winrm"
        - ENVNAME != "UAT"
        - (prod_local_sha1.stdout | trim) != (prod_sha1.stdout | trim)

    - name: SHA1 summary (PROD Windows)
      debug:
        msg:
          - "PROD verification for {{ file_name }}:"
          - "  - From PROD Nexus (.sha1): {{ prod_sha1.stdout | trim }}"
          - "  - Calculated locally     : {{ prod_local_sha1.stdout | trim }}"
          - "  - Input SHA1             : {{ checksum_val | default('N/A') }}"
      when:
        - task == "download"
        - OS == "winrm"
        - ENVNAME != "UAT"
